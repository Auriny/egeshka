# Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки ходят по очереди, первый ход делает Петя.
# За один ход игрок может добавить в кучу один или четыре камня либо увеличить количество камней в куче в два раза.
# У каждого игрока есть неограниченное количество камней, чтобы делать ходы.
# Игра завершается в тот момент, когда количество камней в куче становится не менее 51. Победителем считается игрок, сделавший последний ход,
# т.е. первым получивший кучу из 51 камней или больше. В начальный момент в куче было S камней; 1 ≤ S ≤ 50.
# Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника.
# Задание 19.
# Укажите минимальное значение S, при котором Петя не может выиграть за один ход, но при любом ходе Пети Ваня может выиграть своим первым ходом
#
# Задание 20.
# Для игры, описанной в задании 19, найдите два наименьших значения S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:
# − Петя не может выиграть за один ход;
# − Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
# Найденные значения запишите в ответе в порядке возрастания.
#
#
# Задание 21.
# Для игры, описанной в задании 19, найдите значение S, при котором одновременно выполняются два условия:
# – у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
# – у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.
# Если найдено несколько значений S, в ответе запишите наименьшее из них.

def f(a, m):
    if not a < 51:
        return m % 2 == 0
    if m == 0:
        return 0
    h = [f(a + 1, m - 1), f(a + 4, m - 1), f(a * 2, m - 1)]
    return any(h) if m % 2 != 0 else all(h)

print('19)', [s for s in range(1, 50 + 1) if f(s, 2)])
print('20)', [s for s in range(1, 50 + 1) if not f(s, 1) and f(s, 3)])
print('21)', [s for s in range(1, 50 + 1) if not f(s, 2) and f(s, 4)])
